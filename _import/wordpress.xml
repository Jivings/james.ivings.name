<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.3.1" created="2012-07-24 22:36" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>James Ivings @ BIT</title>
	<link>http://www.ivings.org.uk</link>
	<description>University of The West of England - Computer Science</description>
	<pubDate>Tue, 24 Jul 2012 22:36:14 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://www.ivings.org.uk</wp:base_site_url>
	<wp:base_blog_url>http://www.ivings.org.uk</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>james@ivings.org.uk</wp:author_email><wp:author_display_name><![CDATA[James]]></wp:author_display_name><wp:author_first_name><![CDATA[James]]></wp:author_first_name><wp:author_last_name><![CDATA[Ivings]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.3.1</generator>

	<item>
		<title>New Beginnings</title>
		<link>http://www.ivings.org.uk/2010/11/new-beginnings/</link>
		<pubDate>Wed, 10 Nov 2010 11:57:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://95.172.245.87/~james/wordpress/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[A new dawn, Â a new day and another new webhost!

I've been busy the last few days setting up a new site. I am now running off a brand spanking new Ubuntu 9.10 VPS, courtesy of my friends at <a title="xilo.net" href="http://xilo.net" target="_blank">Xilo</a>, who have made the transition very simple.

As you may notice, I am also now using Wordpress (who isn't?), which was fairly straightforward to install on Ubuntu, despite not having any experience with the CMS.

For those who wonder, I'm using a Wordpress theme by <a title="SmashingMagazine" href="http://smashingmagazine.com/" target="_blank">SmashingMagazine</a> and <a href="http://slimmity.com/" target="_blank">Slimmity</a> called SimpleFolio. After some slight CSS changes the result is before you, which saves me a considerable amount of time creating my own!

Another new experience for me was creating and editing a mysql database in Linux, but it did not prove too difficult, and the Wordpress tables almost took care of themselves.

Time to stop experimenting with the blogging features and get moving my content over from my old (and now dated) website!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2010-11-10 11:57:10</wp:post_date>
		<wp:post_date_gmt>2010-11-10 11:57:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-beginnings</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="self"><![CDATA[Self]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[lKBCmtUub5kM]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[bet365]]></wp:comment_author>
			<wp:comment_author_email>hello@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.bet05.com</wp:comment_author_url>
			<wp:comment_author_IP>95.66.7.1</wp:comment_author_IP>
			<wp:comment_date>2010-11-23 18:09:09</wp:comment_date>
			<wp:comment_date_gmt>2010-11-23 18:09:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[how are you I was fortunate to find your theme in bing
your subject is wonderful
I learn a lot in your Topics really thanks very much 
btw the theme of you website is really excellent
where can find it]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[James]]></wp:comment_author>
			<wp:comment_author_email>james@ivings.org.uk</wp:comment_author_email>
			<wp:comment_author_url>http://ivings.org.uk</wp:comment_author_url>
			<wp:comment_author_IP>95.172.233.151</wp:comment_author_IP>
			<wp:comment_date>2010-11-30 19:18:58</wp:comment_date>
			<wp:comment_date_gmt>2010-11-30 19:18:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Because I can't tell if you are a bot or not I thought I may as well answer your question.
The theme is called SimpleFolio, and can be downloaded <a href="http://www.smashingmagazine.com/2010/02/07/simplefolio-a-free-clean-portfolio-wordpress-theme/" rel="nofollow">here</a>, but I added a few modifications, such as my own logo, different fonts and a background, taken unceremoniously from <a href="http://www.slackware.com" rel="nofollow">here</a>.

Hope that helps.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>2</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Grab UI window text with Python</title>
		<link>http://www.ivings.org.uk/2010/11/grab-ui-window-text-with-python/</link>
		<pubDate>Mon, 29 Nov 2010 01:33:05 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=140</guid>
		<description></description>
		<content:encoded><![CDATA[I just discovered this old piece of code while digging through ancient e-mails. which I was quite pleased about since I thought it had been lost.

I wrote it to perform the simple function of getting text from an open window in XP, though I assume it would work for other Windows versions.
I had been writing a Java program which required text from the output of a native Windows application. And although this could probably better be achieved in a different language, I thought that integrating Python output into a Java application would be fairly trivial. 

I achieved it by simply using <a href="http://download.oracle.com/javase/1.5.0/docs/api/java/lang/Runtime.html">Runtime</a> and <a href="http://download.oracle.com/javase/1.4.2/docs/api/java/lang/Process.html">Process</a> objects.

<pre lang="java" line="1">
final String pythonDir = "cmd /c pythonFile.py";
final Runtime r  = Runtime.getRuntime();

//run python process
try
{
   Process p = r.exec(pythonDir);
   BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()), 5000);

   //while there is text, read.
   while ((line = br.readLine()) != null)
   {
     //parse each line
   }
}
catch (Exception e)
{ }
// done
</pre>


However, from what I remember it was the Python that proved exceptionally difficult, mainly due to terrible documentation, and from some Googling I can see I'm not the only one to have found this <a href="http://mail.python.org/pipermail/python-win32/2004-December/002771.html">problem</a>. Now at least it does seem to have gotten <a href="http://www.pha.com.au/kb/index.php/Python_-_ctypes#GUI_Examples">better</a>, though probably it's easier to find now that I know what to search for.

Nevertheless, I managed to hack together workable code to find a specific open window based on the Title bar text, and grab text from that window.
Though it is probably not the most elegant or fastest solution, it worked and I was able to read the window text output into my Java application perfectly.

I can't remember enough to document my code line by line, but I think from the comments it should be quite straightforward...

<pre lang="python" line="1">import win32con
import win32gui
import array
import ctypes
import struct
import sys
import win32api
from ctypes import *

results = []
topWindows = []
chatHwnd = 0
windowTitleText = "Window Title"
#The text that the wanted window string begins with, so we can find it
windowStartText = "Welcome"


if __name__ == '__main__':
    #declare global
    global chatHwnd
    #enumerate all open windows, return topWindows
    win32gui.EnumWindows(_windowEnumerationHandler, topWindows)
    #check each window to fin the one we need
    for hwnd, windowText, windowClass in topWindows:
    if windowText.find(windowTitleText)&gt;-1:
            #search the child windows
            # save the window handle
            chatHwnd = searchChildWindows(hwnd)
            #set the appropriate window focus (if needed)
            win32gui.SetFocus(hwnd)
            win32gui.SetForegroundWindow(hwnd)

            initBuff = 0
            #get text
            while chatHwnd&gt;0:

                buf_size = 1 + win32gui.SendMessage(chatHwnd, win32con.WM_GETTEXTLENGTH, 0, 0)
                buffer = win32gui.PyMakeBuffer(buf_size)
                # send a win GETTEXT request to the window and read into buffer
                win32gui.SendMessage(chatHwnd, win32con.WM_GETTEXT, buf_size, buffer)
                if buf_size-initBuff&gt;1:
                      print buffer[initBuff:buf_size]

                initBuff = buf_size
                #after 5 seconds, get any new text
                time.sleep(5)
                # needed for Java to read the output correctly
                sys.stdout.flush()


'''Handler to enumerate the window with param hwnd
Returns resultsList; the window details as an array,
with hwnd, text and class'''
def _windowEnumerationHandler(hwnd, resultList):
    resultList.append((hwnd,
                       win32gui.GetWindowText(hwnd),
                       win32gui.GetClassName(hwnd)))

'''Recursive function, checks the text of all the children of
the window with handle param hwnd until it reaches the text that
we require, returns the String of this data'''
def searchChildWindows(hwnd):
childWindows = []
    try:
        #get child windows
        win32gui.EnumChildWindows(hwnd, _windowEnumerationHandler, childWindows)
    except win32gui.error, exception:
        # This seems to mean that the control does not or cannot have child windows
        return

    #get details of each child window
    for childHwnd, windowText, windowClass in childWindows:
        #create text buffer
        buf_size = 1 + win32gui.SendMessage(childHwnd, win32con.WM_GETTEXTLENGTH, 0, 0)
        buffer = win32gui.PyMakeBuffer(buf_size)
        #get text from Window using hardware call. (getWindowText() did not return anything)
        win32gui.SendMessage(childHwnd, win32con.WM_GETTEXT, buf_size, buffer)
        #check to see if it's the data we want...
        if buffer[0:buf_size].find(windowStartText)&gt;-1:
            #return the hwnd

            #global chatHwnd
            #chatHwnd = childHwnd
            return int(childHwnd)
        #else recurse, checking this window for children
        #might not be needed...
        #searchChildWindows(childHwnd)


</pre>

And there we are, I hope this is able to save someone else all the time that it cost me.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>140</wp:post_id>
		<wp:post_date>2010-11-29 01:33:05</wp:post_date>
		<wp:post_date_gmt>2010-11-29 01:33:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>grab-ui-window-text-with-python</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[Java]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[o0nj4ULG0KND]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android Development</title>
		<link>http://www.ivings.org.uk/2011/01/android-development/</link>
		<pubDate>Fri, 14 Jan 2011 09:43:37 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[As of this week I've stormed the beach of Android Development. Right now I'm caught in the barbed wire of Android SDK, but I managed to get a development environment up without a hitch and my first App is coming along nicely!

I will let you know how it goes!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2011-01-14 09:43:37</wp:post_date>
		<wp:post_date_gmt>2011-01-14 09:43:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android-development</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[8pPzLF2MFxsA]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Luke]]></wp:comment_author>
			<wp:comment_author_email>luke@lukebrowning.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.lukebrowning.com</wp:comment_author_url>
			<wp:comment_author_IP>89.168.146.63</wp:comment_author_IP>
			<wp:comment_date>2011-01-14 15:26:39</wp:comment_date>
			<wp:comment_date_gmt>2011-01-14 15:26:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hah, nice mate, I've decided to compile Cyanogenmod from source today for my android tablet.. Not sure its going to work though.. Hopefully I wont brick it!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[James]]></wp:comment_author>
			<wp:comment_author_email>james@ivings.org.uk</wp:comment_author_email>
			<wp:comment_author_url>http://ivings.org.uk</wp:comment_author_url>
			<wp:comment_author_IP>95.172.233.151</wp:comment_author_IP>
			<wp:comment_date>2011-02-02 20:39:07</wp:comment_date>
			<wp:comment_date_gmt>2011-02-02 20:39:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How did it go?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>4</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>No Python switch statement?</title>
		<link>http://www.ivings.org.uk/2011/02/no-python-switch-statement/</link>
		<pubDate>Sun, 20 Feb 2011 12:08:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=164</guid>
		<description></description>
		<content:encoded><![CDATA[When I was relatively new to Python and writing my first real program, one of the first things I noticed was the lack of a switch statement, which had become commonplace when coding in Java.

Since then I've found multiple ways to achieve the same effect (without the use of if-else's!);

Firstly the concept of <strong>assigning a variable</strong> using a switch, which in Java may look something like this;

<pre lang="java" line="1">
  int result;
  switch(condition)
   {
     case 'a': result = 1; 
       break;
     case 'b': result = 2; 
       break;
     case 'c': result = 3;  
       break
     default: result = 0;
   }
</pre>

We can achieve the same in Python using a dictionary;

<pre lang="python" line="1">
result = {
  'a': 1,
  'b': 2,
  'c': 3
}[condition]
</pre>

And lets say we want to define functions as the result of our switch. Also you may have noticed that the above does not define a default action, which is present in the Java equivalent. We can include both like so;

<pre lang="python" line="1">
# define the dict
values = { 
           'a': do_stuff, 
           'b': do_stuff2, 
           'c': do_stuff3,
 }
# get the function
values.get(condition, do_default)()
</pre>

This will execute the do_stuff function defined by the condition, and if a value is not found then it will execute do_default.

Much less verbose wouldn't you say?

I have one more to add to the list, which I guess is really Reflection, but can be used for the same purpose and is pretty cool in Python. 

<pre lang="python" line="1">
method_name = 'do_' + condition
if not hasattr(self, method_name):
   do_default
else:
   method = getattr(self, method_name)
   result = method()

def do_a:
  return 1
def do_b:
  return 2
def do_c:
  return 3
def do_default:
  return 0
</pre>

Some explanation may be in order if you're not familiar with Python. If you're a Java pro, then you may be used to fetching attributes or methods using the getClass() function. This is much easier and awesome in Python. 

To put it bluntly, the built in function <a href="http://docs.python.org/library/functions.html#hasattr">hasattr</a> checks the object's (in this case 'self') attributes for the given string. 
Then we use <a href="http://docs.python.org/library/functions.html#getattr">getattr</a> to retrieve the attribute, in this case a function, which is then executed.


   
There you have it. As you see, these examples of switch statements provide much more flexibility (mainly in the fact that you are not limited to primitive types!), and are in most cases much less verbose.
Happy coding!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>164</wp:post_id>
		<wp:post_date>2011-02-20 12:08:48</wp:post_date>
		<wp:post_date_gmt>2011-02-20 12:08:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>no-python-switch-statement</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[PP4b4DdFlgdb]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up a DNS - Start to finish.</title>
		<link>http://www.ivings.org.uk/2011/03/setting-up-a-dns-start-to-finish/</link>
		<pubDate>Fri, 11 Mar 2011 10:36:24 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=179</guid>
		<description></description>
		<content:encoded><![CDATA[Last week my domain name expired with my provider, so I decided to switch my domain registrar to Xilo, so that all my services would be together. However Xilo don't provide an entry on their Nameserver, so you have to provide your own if you actually want the domain to point to anywhere. A bit annoying, but I had been meaning to set up my own on my VPS anyway, and what a great opportunity, right?! 

So I sent a request off to one.com to cancel my existing account, to which they helpfully complied. Unhelpfully however they sent a confirmation email to my @ivings.org.uk address, the one they had just cancelled. Nice one guys! Due to this undersight I wasn't aware of my account termination until 2 days after.

My situation so far; No website, no forwarding email address. To me this means that all of my emails were getting kicked back to the sender, frustrating to say the least!

Moving on... setting up the DNS.

<strong>Changing the domain DNS records</strong>
First thing to do is change the records on the domain. This is fairly simple but <em>note</em>;
If you want to host the DNS on the same system as your website like me, then you also need to set <a href="http://en.wikipedia.org/wiki/Domain_Name_System#Circular_dependencies_and_glue_records">Glue Records</a> which protect from circular dependencies:

Nameserver 1 : ns1.ivings.org.uk 
Nameserver 2 : ns2.ivings.org.uk
Glue : 95.172.245.87

The Glue record specifies the IP of my VPS, where the DNS will be hosted.

<strong>Configuring the DNS</strong>
First install <a href="http://en.wikipedia.org/wiki/BIND">bind</a>:
<pre id="terminal">apt-get install bind9</pre>

Next create the Zone that will represent your domain:
<pre id="terminal">$ nano /etc/bind/zones/ivings.org.uk.db

 SOA ivings.org.uk. admin.ivings.org.uk. (
// Do not change these
2007031001
28800
3600
604800
38400
)


ivings.org.uk. IN NS ns1.ivings.org.uk.
ivings.org.uk. IN MX 10 mail.ivings.org.uk.

www IN A 172.0.0.1
ns1 IN A 172.0.0.1
mail IN A 172.0.0.1
</pre>

As you can see I've set up my nameserver and mailserver (more on mail later) as well as some A records. You can find more information Zone files <a href="http://en.wikipedia.org/wiki/Zone_file">here</a>. As you can see the A records are directing to localhost, as the DNS is set up on the same system as the site is hosted.

Next create a reverse DNS zone file, this is used for reverse DNS lookups, and occasionally by mail server authentication. It is generally recommended and should look something like this;

<pre id="terminal">
$ nano rev.0.168.192.in-addr.arpa

 7200
@ IN SOA ns1.ivings.org.uk. admin.ivings.org.uk. (
2007031001;
28800;
604800;
604800;
86400
)

IN NS ns1.ivings.org.uk.
1 IN PTR ivings.org.uk.
</pre>

Finally you will want to add these Zones to you named.conf.local file;

<pre id="terminal">
$ nano /etc/bind/named.conf.local

# For reverse DNS
zone "0.168.192.in-addr.arpa" {
   type master;
   file "/etc/bind/zones/rev.0.168.192.in-addr.arpa";
};

zone "ivings.org.uk" {
   type master;
   file "/etc/bind/zones/ivings.org.uk.db";
};
</pre>

And start the bind service;

<pre id="terminal">
$ service bind9 start

 * Starting domain name service... bind9                                               [ OK ]
</pre>

You can test your new DNS by replacing ivings.org.uk with your domain and following this link: <a href="http://freedns.afraid.org/domain/dnstrace.php?domain=ivings.org.uk">http://freedns.afraid.org/domain/dnstrace.php?domain=ivings.org.uk</a>

Congrats, your DNS is up and running! 

If you want to make changes then be sure to reload the configuration files as well as restart bind:

<pre id="terminal">
$ sudo rndc reconfig
$ sudo rndc reload

server reload successful

$ service bind9 restart

 * Stopping domain name service... bind9                                               [ OK ]
 * Starting domain name service... bind9                                               [ OK ]
</pre>
If you restart without reloading the files then the server will use cached versions, and the changes wont take effect.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date>2011-03-11 10:36:24</wp:post_date>
		<wp:post_date_gmt>2011-03-11 10:36:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-a-dns-start-to-finish</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<category domain="category" nicename="self"><![CDATA[Self]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_plus_one_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[tYGnd6R3PM3M]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mobile Development with PhoneGap</title>
		<link>http://www.ivings.org.uk/2011/06/mobile-development-with-phonegap/</link>
		<pubDate>Fri, 03 Jun 2011 10:48:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=234</guid>
		<description></description>
		<content:encoded><![CDATA[I've recently been working on Mobile Development, both at work and at home. 
In doing so I discovered an excellent tool called PhoneGap that I want to share with everyone.
PhoneGap allows you to code your application in simple web technologies, rather than the complex native languages such as Java or Objective-C. 

I recently created a presentation diving into the pros and cons of this type of web-app development for my company. The first half of the document explains the concept behind PhoneGap, I then go on to explain boring parts of development for each platform;

<p style="text-align:center">
<iframe src="https://docs.google.com/present/embed?id=dd3xbt3j_14f774zgdk&interval=60&size=m" frameborder="0" width="555" height="451" style="margin:0 auto;"></iframe>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2011-06-03 10:48:15</wp:post_date>
		<wp:post_date_gmt>2011-06-03 10:48:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mobile-development-with-phonegap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="category" nicename="phonegap"><![CDATA[PhoneGap]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[L7l6bzb49JYl]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Web-Apps with jQuery Mobile and PhoneGap</title>
		<link>http://www.ivings.org.uk/2011/06/web-apps-with-jquery-mobile-and-phonegap/</link>
		<pubDate>Fri, 10 Jun 2011 13:34:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[I recently wrote a report for University on mobile development. The question I posed was; 
<code>"Will mobile application development continue to be lucrative in a market with increasing emphasis on cloud and web based services?".</code>

I have been working a great deal with mobile technologies and I feel I have gained some insight into the direction is which the industry is heading. 
If you have time, give my article a read. It is essentially a web-app and can be found at the link below, where it can also be downloaded as an Android application.

<a href="http://www.ivings.org.uk/projects/mobile/">http://www.ivings.org.uk/projects/mobile/</a>

The site uses jQuery Mobile to render the pages. This is an amazing tool, though still in Beta. I converted it into an Android Application using PhoneGap. Information about both these technologies can be found within the report.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2011-06-10 13:34:57</wp:post_date>
		<wp:post_date_gmt>2011-06-10 13:34:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-apps-with-jquery-mobile-and-phonegap</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="mobile"><![CDATA[Mobile]]></category>
		<category domain="category" nicename="phonegap"><![CDATA[PhoneGap]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[gnY4hY4irRpT]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>From Edison to Google - The rise of Utility Computing</title>
		<link>http://www.ivings.org.uk/2011/06/the-rise-of-utility-computing/</link>
		<pubDate>Sat, 25 Jun 2011 08:46:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=300</guid>
		<description></description>
		<content:encoded><![CDATA[Popular in recent news is the rise of cloud computing services and although products such as <a href="http://www.apple.com/icloud/">Apple's iCloud</a> have received a <a href="http://www.telegraph.co.uk/technology/apple/8564093/Apple-iCloud-the-criticism.html">large amount</a> of <a href="http://ashcotton.com/blog/forecast-cloudy-with-a-chance-of-apple-shoving-another-product-down-my-throat-that-i-really-don%E2%80%99t-want">criticism</a>, most will agree that a great deal of the leading trends in the computing industry can be associated to one model, that of computing distributed as a utility.

The most compelling and thought inspiring comparison I have read on the issue is in a book called <a href="http://www.amazon.co.uk/Big-Switch-Rewiring-Edison-Google/dp/0393062287">The Big Switch</a>. In his book, Nicholas Carr takes us through the electricity generation and the evolution from power generation to mass power distribution. In the 19th century, any business wishing to power their plant would need to purchase and run a personal electricity generator built using Edison's dynamos. Thomas Edison realised late in the century that electricity could be outsourced to power plants, which were able to supply an entire block with life giving power. 

Edison however, never saw beyond this and believed he could profit by manufacturing and distributing the components for his power plant dynamos. It took a man named Samuel Insull to realise the potential of electrical power distributed as a utility. He discovered that power could be created and distributed in large quantities much more efficiently and at a fraction of the cost of Edison's Dynamos. In a very short time he was powering the majority of the businesses in Chicago from one huge power plant. 
These companies had realised that by avoiding the purchase of expensive equipment, they were able to reduce their own fixed costs and not have to worry about maintenance or obsolescence. Electricity as a utility had triumphed over the private power plant.

Present-day, we can see the same process taking place in the computing industry. The personal computer era facilitated by Microsoft saw the rise of the Client-Server model of computing. Through office based data-centres, workers on personal computers are able to access the network, files, printers or other services. Although this model became hugely popular it also made the entire process massively inefficient.
This is largely due to the lack of industry standards, meaning that hardware and software companies constantly compete by selling products that do not interact well with their competitors versions. This results in machines dedicated to single purposes, such as databases or web-servers and in order to host a new application or service a company must purchase another machine to dedicate to it. Furthermore, in a stable system, these computers need the capability to reach peak demands, and their available resources must reflect this even if the peak is rarely reached.
My most recent employer was suffering from this in a bad way, a recent review estimating that under 40% of the total processing power was in use over 90% of the time.
In short, client-server computing has destroyed the conservation of energy and processing power that had been present in previous generations.

Obviously clear similarities can be made from this to the electricity era, the self contained data-centres businesses construct being just as wasteful and expensive as Edison's private dynamos.
From this comparison it is easy to wonder why computing as a utility was not at the forefront of the computing generation. However, it had always been limited by a lack of sufficient bandwidth in the same way that electrical power was limited by DC. Now that network speeds are sky-rocketing and becoming cheaper, the power of computers can be delivered to users from a great distance, ushering in the age of utility computing.

From this description it's difficult to see how Apple's new service fits into the cloud computing model. By that I mean the fact that when using their iCloud service you get nothing more than online storage for your music. In order to listen you are still required to download your tracks to a physical device. Essentially they are providing outsourced storage, but hard drives are as cheap as they have ever been, and storage is now the most inexpensive part of computing. However, Microsoft and other manufacturers have also been following this same, seemingly unprofitable business model. 

I believe it's plain to see the future lies in outsourcing the whole deal, or more importantly, the processing element of a system. This is already happening, but we have obviously not crossed over to this model yet and due to current mind-sets I don't think we are quite ready to leave the client-server model behind. This said, I don't think it will be long before our home PC's consist of barely more than a monitor, accessing the cloud for any service we require, we just need a large corporation to give the industry a shake. Google have already attempted proper cloud computing like this with <a href="http://en.wikipedia.org/wiki/Google_Chrome_OS">their new OS</a> and it has also been experimented with on a <a href="http://www.jolicloud.com/">few other platforms</a>.

However, large companies such as Apple and Microsoft are doing nothing to facilitate this jump. Personally I see these companies as the Edison of the digital world. They came up with a good idea, but are unwilling to push it onto the next logical step, and their concern with the potential obsolescence of their current products (such as Windows or iTunes) is holding the industry back and costing us all money. 
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>300</wp:post_id>
		<wp:post_date>2011-06-25 08:46:18</wp:post_date>
		<wp:post_date_gmt>2011-06-25 08:46:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-rise-of-utility-computing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="apple"><![CDATA[apple]]></category>
		<category domain="category" nicename="cloud"><![CDATA[Cloud]]></category>
		<category domain="post_tag" nicename="cloud-2"><![CDATA[cloud]]></category>
		<category domain="post_tag" nicename="google"><![CDATA[google]]></category>
		<category domain="post_tag" nicename="icloud"><![CDATA[icloud]]></category>
		<category domain="category" nicename="self"><![CDATA[Self]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[zojb60VOQHfj]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Upgrading Ubuntu from Jaunty 9.04 to Lucid 10.04</title>
		<link>http://www.ivings.org.uk/2011/08/upgrading-ubuntu-from-jaunty-9-04-to-lucid-10-04/</link>
		<pubDate>Wed, 31 Aug 2011 09:34:20 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=318</guid>
		<description></description>
		<content:encoded><![CDATA[Recently the lack of support for the version of Ubuntu I was lumped with on my VPS (9.04) was starting to be a major hindrance to development. It appears that once an Ubuntu version gets too old all the packages get deprecated completely, rendering the package manager apt completely useless.

Obviously I had put off upgrading long enough, so went searching on the best way to migrate to the newest version. The first command I found seemed pretty simple;

<pre id="terminal">sudo do-release-upgrade</pre>

This should automagically download the latest kernel source and upgrade all packages to the newest supported version, awesome. However, if it was that simple then I wouldn't be blogging about it right? Right.
It appears that this command gets deprecated when you fall more than one version behind. So although it can be used effectively to upgrade from Karmic to Lucid, it doesn't work when upgrading from Jaunty. For reference, the the command gives the following output:

<pre id="terminal">sudo do-release-upgrade

Checking for a new ubuntu release
Done Upgrade tool signature
Done Upgrade tool
Done downloading            
extracting 'lucid.tar.gz'
authenticate 'lucid.tar.gz' against 'lucid.tar.gz.gpg' 
tar: Removing leading `/' from member names

Reading cache

Checking package manager

Can not upgrade 

An upgrade from 'jaunty' to 'lucid' is not supported with this tool. </pre>

In order to pull this off we firstly need to upgrade to Karmic. Luckily there is a small hack that allows us to upgrade all our packages to Karmic versions, including the kernel. 
Edit the apt sources list so that it looks like this:

<pre id="terminal">sudo nano /etc/apt/sources.list

## EOL upgrade sources.list
# Required
deb http://archive.ubuntu.com/ubuntu/ karmic main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ karmic-updates main restricted universe multiverse
deb http://archive.ubuntu.com/ubuntu/ karmic-security main restricted universe multiverse

# Optional
#deb http://archive.ubuntu.com/ubuntu/ karmic-backports main restricted universe multiverse
#deb http://archive.ubuntu.com/ubuntu/ karmic-proposed main restricted univ</code>
</pre>

Now, if we run a system upgrade, all Karmic packages will be downloaded and installed, including the new kernel.

<pre id="terminal">sudo apt-get update && apt-get upgrade</pre>

Now we are running Karmic we can upgrade to Lucid using:
<pre id="terminal">sudo do-release-upgrade</pre>


Hopefully you should not have any issues with this, but I had a couple with the old kernel files.
Explained by <a href="http://askubuntu.com/questions/59261/dpkg-cannot-remove-package-linux-restricted-modules">this StackOverflow post by me</a>, I was stuck with some old kernel modules that would not uninstall because the kernels no longer existed. This was giving me this error message every time I ran apt:
<pre id="terminal">The following packages will be REMOVED
    linux-restricted-modules-2.6.28-11-server 
    linux-restricted-modules-2.6.28-19-server
</pre>
Thank god for StackOverflow or I would still be stuck on it now. Check the link above for the given solution. Apart from that, and <a href="http://askubuntu.com/questions/59272/php-not-working-in-apache2-after-system-upgrade/59393#59393">a few issues</a> with my Apache server, it was a relatively smooth upgrade.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>318</wp:post_id>
		<wp:post_date>2011-08-31 09:34:20</wp:post_date>
		<wp:post_date_gmt>2011-08-31 09:34:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>upgrading-ubuntu-from-jaunty-9-04-to-lucid-10-04</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_plus_one_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[6dPFUpdxc0Pt]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SSH bypassing Firewall and NAT</title>
		<link>http://www.ivings.org.uk/2011/09/ssh-bypassing-firewall-and-nat/</link>
		<pubDate>Tue, 13 Sep 2011 10:07:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=330</guid>
		<description></description>
		<content:encoded><![CDATA[Just spent a while helping <a href="https://plus.google.com/110337150199578371216/posts" title="Jon Tremelling" target="_blank">Jon Tremelling</a> with his most recent Linux faux pas (for the future Jon; Don't ever run dd on the wrong device!).

Anyway, as per usual we have a problem with me trying to SSH around his routers closed and forwarded ports. This got me thinking about reverse SSH tunneling and if we could use my VPS as a middle man.

Through some Googling I found the SSH option -R which allows you to bind a port on the remote server to a new host.
So let us run this command on the machine we are trying to reach, our destination machine, using my VPS (ivings.org.uk) as the middle man:

<pre id="terminal" user="james" computer="FromDust">ssh -R 10022:localhost:22 middleman@ivings.org.uk</pre>

This opens and binds port 10022 on the VPS for listening, and all connections on that port are forwarded to port 22 of our destination.

Now if I ssh to the VPS:

<pre id="terminal" user="james" computer="FromDust">ssh james@ivings.org.uk</pre>

Then connect to the tunnel port:

<pre id="terminal" user="james" computer="FromDust">ssh user@localhost -p 10022</pre>

Where `user` is our username for the destination, then we should be logged on through our tunnel, bypassing the destination machines firewall and NAT.

If you want to add extra security, then this situation should work fine with normal <a href="http://pkeck.myweb.uga.edu/ssh/">ssh keys instead of passwords</a>.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>330</wp:post_id>
		<wp:post_date>2011-09-13 10:07:59</wp:post_date>
		<wp:post_date_gmt>2011-09-13 10:07:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ssh-bypassing-firewall-and-nat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="linux"><![CDATA[Linux]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_plus_one_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[i2wdtG3UOUs1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>University Update</title>
		<link>http://www.ivings.org.uk/2011/11/university-update/</link>
		<pubDate>Sat, 12 Nov 2011 11:21:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=355</guid>
		<description></description>
		<content:encoded><![CDATA[Not many posts recently! I've been concentrating on my final year University project for the past few months and it's finally taking shape. 

The project itself is based on JavaScript and I've decided that I will share several problems I've encountered and my own thoughts on the language over the next few months. When my project is finally complete I will be releasing it under the <a href="http://en.wikipedia.org/wiki/Creative_Commons" title="CC">Creative Commons</a> license for others to explore.

It's very exciting (at least for me!) so stay tuned for updates! Time to get back to work...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>355</wp:post_id>
		<wp:post_date>2011-11-12 11:21:25</wp:post_date>
		<wp:post_date_gmt>2011-11-12 11:21:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>university-update</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>wp_plus_one_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[sVr9u3uunkLP]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JavaScript Interpretation - The Faults and Foibles</title>
		<link>http://www.ivings.org.uk/?p=359</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=359</guid>
		<description></description>
		<content:encoded><![CDATA[As I expand my knowledge of JavaScript I seem to be encountering more and more of its eccentricies. Although many blogs list the problems with the JavaScript language as a whole, I thought I would collect in this post a short list of the most confusing and interesting aspects of JavaScript <strong>interpreters</strong>. Hopefully this will help any JavaScript developers that may happen upon this lost corner of the internet.

<strong>Semi-Colon Insertion</strong>
Due to the leniency of JavaScript interpreters, writing code without line delimiting semi-colons is perfectly acceptable. To deal with this, during execution most interpreters will insert the semi-colons at the end of what it believes is a complete statement.
For example, for anyone using Allman bracket style (though why would you?!), the following statement looks completely valid:
if(x === null)
{
   x = 1
}

However, it is possible for the interpreter to determine that the first line is actually a complete statement. This would result in semi-colons being inserted like this:
if(x == null);
{ 
  x = 1; 
};

What this gives us is a closed if statement, and x always being set to 1 regardless. Clearly not the intended outcome.
 
<strong>Variable Hoisting</strong>
Scope defines the context in which variables and methods can be accessed. Traditional languages, such as C declare <code>block-level</code> scope. This means that variables declared in any code block (such as <code>if</code> statements), will not be accessible from outside that block. 
JavaScript however, declares <code>function-level</code> scope, statements do not create scope, only functions. Thus variables declared anywhere within a function can be referenced anywhere in that same function. To support this notion, all declarations are <code>hoisted</code> to the top of their containing scope by the interpreter. For example take the following function;

function sayHello() {
   if(true) {
      var x = 'world';
   }
   var y = 'hello'
   return x + y; // returns 'hello world'
}

While it appears that the variable x would not be accessible to the returning concatenation, the interpreter will <code>hoist</code> the declarations, making them available to the whole function;

function sayHello() {
   var x, y; 
   if(true) {
      x = 'world';
   }
   y = 'hello'
   return x + y;
}]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>359</wp:post_id>
		<wp:post_date>2011-11-29 11:42:14</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_plus_one_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Why StackOverflow?</title>
		<link>http://www.ivings.org.uk/2012/02/why-stackoverflow/</link>
		<pubDate>Wed, 15 Feb 2012 17:26:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=367</guid>
		<description></description>
		<content:encoded><![CDATA[Recently I've found myself getting into <a href="http://www.stackoverflow.com" target="_blank">StackOverflow</a> in a big way. There are two different types of StackOverflow users, those who use it for an easy answer to their less simple programming problems, and those who indulge the first type by answering.

Having leeched the StackOverflow community for the first three years of my degree I decided it was time to give something back. This was the single best self development decision I have ever made.

I have learned more from answering SO questions over the last few weeks than I've learned in the last few years of my degree. As an example, here's a question from the other day that I answered. The original question (<a href="http://stackoverflow.com/questions/9045353/how-to-block-a-group-of-threads-in-java">found here</a>) was this:

<blockquote>I have a task in which I have to read data using different threads.

The problem is that due to the limitation of read rates, I built different threads with thread groups.

Can any one tell me how to sleep one entire thread group so that it begins execution from exact same place where it left and the other thread groups remain executing? </blockquote>

Not a very normal problem, obviously Threads should not be controlled like this. However, trying to be helpful I hastily answered:

<blockquote><em>Is it enough to enumerate the Thread group and call sleep on each thread?</em>
<div style="font-style:normal;">
<pre lang="java" line="1">
// initialise the ThreadGroup with Threads
ThreadGroup tg; 
// initialize an Array to hold enumerated Threads
Thread[] threadsToSleep = new Thread[count];
// Copy thread references into array
tg.enumerate(threadsToSleep); 
// Sleep each thread for specified time
for (Thread t : threadsToSleep {
    t.sleep(sleepTime)
}
</pre>
</div>
</blockquote>


That sounds simple enough. However, had I thought about it for more than a minute I would have realised a debilitating flaw, which was instantly pointed out to me by the comment:

<blockquote>Sleep is a static method. You will sleep the current thread and not the thread you're iterating on â John Vint</blockquote>

Duh. Of course Thread.sleep() is Static and my answer is useless.

My idiocy aside, the point I'm trying to make is that my quick humiliation on this question means I will <strong>never forget my mistake</strong>. 

I need not point out the usefulness of this. It's even <a href="http://programmers.stackexchange.com/questions/20407/will-high-reputation-in-stack-overflow-help-to-get-a-good-job">suggested</a> that high StackOverflow reputation will help you stand out to employers and is a great thing to <a href="http://meta.stackoverflow.com/questions/58947/at-what-point-do-you-put-your-so-reputation-in-your-resume">include on your resume</a>. 
So what are you waiting for? Start answering questions too!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>367</wp:post_id>
		<wp:post_date>2012-02-15 17:26:55</wp:post_date>
		<wp:post_date_gmt>2012-02-15 17:26:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-stackoverflow</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>wp_plus_one_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sfw_comment_form_password</wp:meta_key>
			<wp:meta_value><![CDATA[WzTCbEZExwjy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting System.in to read from a JTextField</title>
		<link>http://www.ivings.org.uk/?p=391</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.ivings.org.uk/?p=391</guid>
		<description></description>
		<content:encoded><![CDATA[I'm coming back to the blog with a bit of Java]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>391</wp:post_id>
		<wp:post_date>2012-06-08 21:01:58</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
